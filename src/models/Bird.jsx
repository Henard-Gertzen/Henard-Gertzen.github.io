/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: sandeep.s (https://sketchfab.com/sandeep.s)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/flying-bird-eb843194e06d429ebef7dd4aa7e265c1
Title: Flying Bird
*/

import React, { useRef, useEffect, useState } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber';
import { a } from '@react-spring/three';

import planeScene from '../assets/3d/flying_bird.glb';

const Bird = ({isRotating, ...props}) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(planeScene)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions['Take 001'].play();
  },[]);

  useFrame(({ clock, camera }) => {
    // Update the Y position to simulate bird-like motion using a sine wave
    group.current.position.y = Math.sin(clock.elapsedTime) * 0.2 + 2;

    // Check if the bird reached a certain endpoint relative to the camera
    if (group.current.position.x > camera.position.x + 10) {
      // Change direction to backward and rotate the bird 180 degrees on the y-axis
      group.current.rotation.y = Math.PI;
    } else if (group.current.position.x < camera.position.x - 10) {
      // Change direction to forward and reset the bird's rotation
      group.current.rotation.y = 0;
    }

    // Update the X and Z positions based on the direction
    if (group.current.rotation.y === 0) {
      // Moving forward
      group.current.position.x += 0.01;
      group.current.position.z -= 0.01;
    } else {
      // Moving backward
      group.current.position.x -= 0.01;
      group.current.position.z += 0.01;
    }
  });

  return (
    <a.group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="b41216c5de024b378dcea87d8b695888fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="FlyingBird"
                  position={[-0.003, 0.079, 0.074]}
                  rotation={[2.922, -0.036, 3.134]}
                  scale={0.1}>
                  <group name="Bird" position={[0.064, 0.146, 0.587]} scale={0.104}>
                    <mesh
                      name="Bird_roll_env_07lambert10_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Bird_roll_env_07lambert10_0.geometry}
                      material={materials.roll_env_07lambert10}
                    />
                  </group>
                  <group
                    name="Bird_RW"
                    position={[-0.057, 0.196, 0.349]}
                    rotation={[-0.066, -0.051, 0.025]}
                    scale={0.104}>
                    <mesh
                      name="Bird_RW_roll_env_07fishMaterialSG1_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Bird_RW_roll_env_07fishMaterialSG1_0.geometry}
                      material={materials.roll_env_07fishMaterialSG1}
                    />
                  </group>
                  <group
                    name="Bird_LW"
                    position={[-0.057, 0.196, 0.349]}
                    rotation={[-0.09, -0.046, -3.105]}
                    scale={0.104}>
                    <mesh
                      name="Bird_LW_roll_env_07fishMaterialSG1_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Bird_LW_roll_env_07fishMaterialSG1_0.geometry}
                      material={materials.roll_env_07fishMaterialSG1}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </a.group>
  )
}

export default Bird;

